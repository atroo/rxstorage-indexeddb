{"version":3,"sources":["../../src/translate-mango-query.ts"],"names":["extend","require","combinationFields","logicalMatchers","translateMangoQuerySelector","query","indexes","selector","massageSelector","sort","massageSort","validateFindRequest","findFirstIndexRange","input","result","wasAnded","mergeAndedSelectors","fields","Object","keys","i","length","field","matcher","$eq","$ne","selectors","res","forEach","isCombinationalField","Array","map","m","fieldMatchers","operator","value","mergeGtGte","mergeLtLte","mergeNe","mergeEq","indexOf","isArray","Error","sorting","obj","requestDef","$gte","$gt","$lte","$lt","push","getSingleFieldQueryOptsFor","userOperator","userValue","key","endkey","startkey","inclusive_end","inclusive_start","getMultiFieldCoreQueryPlan","getSingleFieldCoreQueryPlan","rawFields","indexed","find","data","queryOpts","inMemoryFields","userOperators","combinedOpts","isNonLogicalMatcher","newQueryOpts","mergeObjects","cloneSelector","assign","index","compound","memoMatcher","name","some","part","usingGtlt","previousKeys","previousWasEq","arrayEquals","previousWasSame","gtltLostSpecificity","j","newOpts","COLLATE_LO","COLLATE_HI","inclusiveStart","inclusiveEnd","getMultiFieldQueryOpts","undefined","finish","slice","len","indexField","arr1","arr2","arr"],"mappings":"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","sourcesContent":["import { match } from \"core-js/fn/symbol\";\r\nimport {\r\n  clone,\r\n  MangoQuery,\r\n  MangoQuerySelector,\r\n  MangoQuerySortPart,\r\n} from \"rxdb\";\r\nimport { Index } from \"./types/browser-storeage-state\";\r\nimport { ITranslatedQuery } from \"./types/translate-mango-query\";\r\nimport { COLLATE_HI, COLLATE_LO } from \"./variables\";\r\nconst extend = require(\"pouchdb-extend\");\r\n\r\nconst combinationFields = [\"$or\", \"$nor\", \"$not\"];\r\ntype LogicalOperator = \"$eq\" | \"$lte\" | \"$gte\" | \"$lt\" | \"$gt\";\r\nconst logicalMatchers: LogicalOperator[] = [\r\n  \"$eq\",\r\n  \"$gt\",\r\n  \"$gte\",\r\n  \"$lt\",\r\n  \"$lte\",\r\n];\r\n\r\nexport const translateMangoQuerySelector = <RxDocType>(\r\n  query: MangoQuery<RxDocType>,\r\n  indexes: Index[]\r\n): ITranslatedQuery => {\r\n  if (query.selector) {\r\n    query.selector = massageSelector(query.selector);\r\n  }\r\n  if (query.sort) {\r\n    query.sort = massageSort(query.sort);\r\n  }\r\n\r\n  validateFindRequest(query);\r\n\r\n  return findFirstIndexRange(query.selector, indexes);\r\n};\r\n\r\n/**\r\n * Snippets from pouchdb-find that allow to translate Mango query\r\n */\r\n\r\nfunction massageSelector<RxDocType>(input: MangoQuerySelector<RxDocType>) {\r\n  let result = { ...input };\r\n  let wasAnded = false;\r\n  if (\"$and\" in result) {\r\n    result = mergeAndedSelectors(result[\"$and\"]);\r\n    wasAnded = true;\r\n  }\r\n\r\n  if (\"$not\" in result) {\r\n    //This feels a little like forcing, but it will work for now,\r\n    //I would like to come back to this and make the merging of selectors a little more generic\r\n    result[\"$not\"] = mergeAndedSelectors([result[\"$not\"]]);\r\n  }\r\n\r\n  var fields = Object.keys(result);\r\n\r\n  for (var i = 0; i < fields.length; i++) {\r\n    var field = fields[i];\r\n    var matcher = result[field];\r\n\r\n    if (typeof matcher !== \"object\" || matcher === null) {\r\n      matcher = { $eq: matcher };\r\n    } else if (\"$ne\" in matcher && !wasAnded) {\r\n      // I put these in an array, since there may be more than one\r\n      // but in the \"mergeAnded\" operation, I already take care of that\r\n      matcher.$ne = [matcher.$ne];\r\n    }\r\n    result[field] = matcher;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction mergeAndedSelectors(selectors: any[]) {\r\n  // sort to ensure that e.g. if the user specified\r\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\r\n  // just {$gt: 'b'}\r\n  var res: Record<string, any> = {};\r\n\r\n  selectors.forEach(function (selector) {\r\n    Object.keys(selector).forEach(function (field) {\r\n      var matcher = selector[field];\r\n      if (typeof matcher !== \"object\") {\r\n        matcher = { $eq: matcher };\r\n      }\r\n\r\n      if (isCombinationalField(field)) {\r\n        if (matcher instanceof Array) {\r\n          res[field] = matcher.map(function (m) {\r\n            return mergeAndedSelectors([m]);\r\n          });\r\n        } else {\r\n          res[field] = mergeAndedSelectors([matcher]);\r\n        }\r\n      } else {\r\n        var fieldMatchers = (res[field] = res[field] || {});\r\n        Object.keys(matcher).forEach(function (operator) {\r\n          var value = matcher[operator];\r\n\r\n          if (operator === \"$gt\" || operator === \"$gte\") {\r\n            return mergeGtGte(operator, value, fieldMatchers);\r\n          } else if (operator === \"$lt\" || operator === \"$lte\") {\r\n            return mergeLtLte(operator, value, fieldMatchers);\r\n          } else if (operator === \"$ne\") {\r\n            return mergeNe(value, fieldMatchers);\r\n          } else if (operator === \"$eq\") {\r\n            return mergeEq(value, fieldMatchers);\r\n          }\r\n          fieldMatchers[operator] = value;\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nfunction isCombinationalField(field: string) {\r\n  return combinationFields.indexOf(field) > -1;\r\n}\r\n\r\n// normalize the \"sort\" value\r\nfunction massageSort<RxDocType>(sort: MangoQuerySortPart<RxDocType>[]) {\r\n  if (!Array.isArray(sort)) {\r\n    throw new Error(\"invalid sort json - should be an array\");\r\n  }\r\n  return sort.map(function (sorting) {\r\n    if (typeof sorting === \"string\") {\r\n      const obj = {\r\n        [sorting as string]: \"asc\",\r\n      } as MangoQuerySortPart<RxDocType>;\r\n      return obj;\r\n    } else {\r\n      return sorting;\r\n    }\r\n  });\r\n}\r\n\r\nfunction validateFindRequest<RxDocType>(requestDef: MangoQuery<RxDocType>) {\r\n  if (typeof requestDef.selector !== \"object\") {\r\n    throw new Error(\"you must provide a selector when you find()\");\r\n  }\r\n\r\n  /*var selectors = requestDef.selector['$and'] || [requestDef.selector];\r\n  for (var i = 0; i < selectors.length; i++) {\r\n    var selector = selectors[i];\r\n    var keys = Object.keys(selector);\r\n    if (keys.length === 0) {\r\n      throw new Error('invalid empty selector');\r\n    }\r\n    //var selection = selector[keys[0]];\r\n    /*if (Object.keys(selection).length !== 1) {\r\n      throw new Error('invalid selector: ' + JSON.stringify(selection) +\r\n        ' - it must have exactly one key/value');\r\n    }\r\n  }*/\r\n}\r\n\r\n// collapse logically equivalent gt/gte values\r\nfunction mergeGtGte(\r\n  operator: string,\r\n  value: string | number,\r\n  fieldMatchers: any\r\n) {\r\n  if (typeof fieldMatchers.$eq !== \"undefined\") {\r\n    return; // do nothing\r\n  }\r\n  if (typeof fieldMatchers.$gte !== \"undefined\") {\r\n    if (operator === \"$gte\") {\r\n      if (value > fieldMatchers.$gte) {\r\n        // more specificity\r\n        fieldMatchers.$gte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value >= fieldMatchers.$gte) {\r\n        // more specificity\r\n        delete fieldMatchers.$gte;\r\n        fieldMatchers.$gt = value;\r\n      }\r\n    }\r\n  } else if (typeof fieldMatchers.$gt !== \"undefined\") {\r\n    if (operator === \"$gte\") {\r\n      if (value > fieldMatchers.$gt) {\r\n        // more specificity\r\n        delete fieldMatchers.$gt;\r\n        fieldMatchers.$gte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value > fieldMatchers.$gt) {\r\n        // more specificity\r\n        fieldMatchers.$gt = value;\r\n      }\r\n    }\r\n  } else {\r\n    fieldMatchers[operator] = value;\r\n  }\r\n}\r\n\r\n// collapse logically equivalent lt/lte values\r\nfunction mergeLtLte(\r\n  operator: string,\r\n  value: string | number,\r\n  fieldMatchers: any\r\n) {\r\n  if (typeof fieldMatchers.$eq !== \"undefined\") {\r\n    return; // do nothing\r\n  }\r\n  if (typeof fieldMatchers.$lte !== \"undefined\") {\r\n    if (operator === \"$lte\") {\r\n      if (value < fieldMatchers.$lte) {\r\n        // more specificity\r\n        fieldMatchers.$lte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value <= fieldMatchers.$lte) {\r\n        // more specificity\r\n        delete fieldMatchers.$lte;\r\n        fieldMatchers.$lt = value;\r\n      }\r\n    }\r\n  } else if (typeof fieldMatchers.$lt !== \"undefined\") {\r\n    if (operator === \"$lte\") {\r\n      if (value < fieldMatchers.$lt) {\r\n        // more specificity\r\n        delete fieldMatchers.$lt;\r\n        fieldMatchers.$lte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value < fieldMatchers.$lt) {\r\n        // more specificity\r\n        fieldMatchers.$lt = value;\r\n      }\r\n    }\r\n  } else {\r\n    fieldMatchers[operator] = value;\r\n  }\r\n}\r\n\r\n// combine $ne values into one array\r\nfunction mergeNe(value: string | number, fieldMatchers: any) {\r\n  if (\"$ne\" in fieldMatchers) {\r\n    // there are many things this could \"not\" be\r\n    fieldMatchers.$ne.push(value);\r\n  } else {\r\n    // doesn't exist yet\r\n    fieldMatchers.$ne = [value];\r\n  }\r\n}\r\n\r\n// add $eq into the mix\r\nfunction mergeEq(value: string | number, fieldMatchers: any) {\r\n  // these all have less specificity than the $eq\r\n  // TODO: check for user errors here\r\n  delete fieldMatchers.$gt;\r\n  delete fieldMatchers.$gte;\r\n  delete fieldMatchers.$lt;\r\n  delete fieldMatchers.$lte;\r\n  delete fieldMatchers.$ne;\r\n  fieldMatchers.$eq = value;\r\n}\r\n\r\nfunction getSingleFieldQueryOptsFor(userOperator: string, userValue: any) {\r\n  switch (userOperator) {\r\n    case \"$eq\":\r\n      return { key: [userValue] };\r\n    case \"$lte\":\r\n      return { endkey: [userValue] };\r\n    case \"$gte\":\r\n      return { startkey: [userValue] };\r\n    case \"$lt\":\r\n      return {\r\n        endkey: [userValue],\r\n        inclusive_end: false,\r\n      };\r\n    case \"$gt\":\r\n      return {\r\n        startkey: [userValue],\r\n        inclusive_start: false,\r\n      };\r\n  }\r\n}\r\n\r\nfunction getMultiFieldCoreQueryPlan(userOperator: string, userValue: any) {\r\n  switch (userOperator) {\r\n    case \"$eq\":\r\n      return {\r\n        startkey: userValue,\r\n        endkey: userValue,\r\n      };\r\n    case \"$lte\":\r\n      return {\r\n        endkey: userValue,\r\n      };\r\n    case \"$gte\":\r\n      return {\r\n        startkey: userValue,\r\n      };\r\n    case \"$lt\":\r\n      return {\r\n        endkey: userValue,\r\n        inclusive_end: false,\r\n      };\r\n    case \"$gt\":\r\n      return {\r\n        startkey: userValue,\r\n        inclusive_start: false,\r\n      };\r\n  }\r\n}\r\n/**\r\n * @deprecated we can adopt it later for next storages\r\n * @param selector\r\n * @param indexes\r\n * @returns\r\n */\r\nfunction getSingleFieldCoreQueryPlan<RxDocType>(\r\n  selector: MangoQuerySelector<RxDocType>,\r\n  indexes: Index[]\r\n) {\r\n  const rawFields = Object.keys(selector);\r\n  const field = rawFields[0];\r\n  const indexed = indexes.find((data) => {\r\n    return data.value === field;\r\n  });\r\n\r\n  if (!indexed) {\r\n    return {\r\n      queryOpts: null,\r\n      inMemoryFields: [field],\r\n      fields: [],\r\n    };\r\n  }\r\n\r\n  const fields: string[] = [];\r\n  //ignoring this because the test to exercise the branch is skipped at the moment\r\n  /* istanbul ignore next */\r\n  var matcher = selector[field] || {};\r\n  var inMemoryFields: string[] = [];\r\n\r\n  var userOperators = Object.keys(matcher) as LogicalOperator[];\r\n\r\n  var combinedOpts: Record<any, any> | null = null;\r\n\r\n  userOperators.forEach(function (userOperator) {\r\n    if (isNonLogicalMatcher(userOperator)) {\r\n      inMemoryFields.push(field);\r\n    } else {\r\n      fields.push(field);\r\n    }\r\n\r\n    var userValue = matcher[userOperator];\r\n\r\n    var newQueryOpts = getSingleFieldQueryOptsFor(userOperator, userValue);\r\n\r\n    if (combinedOpts) {\r\n      combinedOpts = mergeObjects([combinedOpts, newQueryOpts]);\r\n    } else {\r\n      combinedOpts = newQueryOpts as Record<any, any>;\r\n    }\r\n  });\r\n\r\n  return {\r\n    queryOpts: combinedOpts,\r\n    inMemoryFields: inMemoryFields,\r\n    fields,\r\n  };\r\n}\r\n\r\nfunction findFirstIndexRange<RxDocType>(\r\n  selector: MangoQuerySelector<RxDocType>,\r\n  indexes: Index[]\r\n) {\r\n  const cloneSelector = Object.assign({}, selector);\r\n  for (let i = 0; i < indexes.length; i += 1) {\r\n    const index = indexes[i];\r\n    const compound = index.value.length > 1;\r\n    let memoMatcher: any;\r\n    if (!compound) {\r\n      memoMatcher = cloneSelector[index.name];\r\n      if (\r\n        (Object.keys(memoMatcher) as LogicalOperator[]).some(\r\n          isNonLogicalMatcher\r\n        )\r\n      ) {\r\n        continue;\r\n      }\r\n    } else {\r\n      (index.value as string[]).forEach((part) => {\r\n        const matcher = cloneSelector[part];\r\n        if (\r\n          !matcher ||\r\n          (Object.keys(matcher) as LogicalOperator[]).some(isNonLogicalMatcher)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        if (!memoMatcher) {\r\n          memoMatcher = part;\r\n          delete cloneSelector[part];\r\n        } else {\r\n          var usingGtlt =\r\n            \"$gt\" in matcher ||\r\n            \"$gte\" in matcher ||\r\n            \"$lt\" in matcher ||\r\n            \"$lte\" in matcher;\r\n          var previousKeys = Object.keys(memoMatcher);\r\n          var previousWasEq = arrayEquals(previousKeys, [\"$eq\"]);\r\n          var previousWasSame = arrayEquals(previousKeys, Object.keys(matcher));\r\n          var gtltLostSpecificity =\r\n            usingGtlt && !previousWasEq && !previousWasSame;\r\n          if (!gtltLostSpecificity) {\r\n            delete cloneSelector[part];\r\n          }\r\n        }\r\n      });\r\n      if (!memoMatcher) {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    delete cloneSelector[index.name];\r\n\r\n    var userOperators = Object.keys(memoMatcher);\r\n\r\n    let combinedOpts: Record<any, any> | null = null;\r\n\r\n    for (var j = 0; j < userOperators.length; j++) {\r\n      var userOperator = userOperators[j];\r\n      var userValue = memoMatcher[userOperator];\r\n\r\n      var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\r\n\r\n      if (combinedOpts) {\r\n        combinedOpts = mergeObjects([combinedOpts, newOpts]);\r\n      } else {\r\n        combinedOpts = newOpts as any;\r\n      }\r\n    }\r\n\r\n    const startkey =\r\n      \"startkey\" in combinedOpts! ? combinedOpts?.startkey : COLLATE_LO;\r\n    const endkey = \"endkey\" in combinedOpts! ? combinedOpts.endkey : COLLATE_HI;\r\n\r\n    let inclusiveStart;\r\n    if (\"inclusive_start\" in combinedOpts!) {\r\n      inclusiveStart = combinedOpts.inclusive_start;\r\n    }\r\n    let inclusiveEnd;\r\n    if (\"inclusive_end\" in combinedOpts!) {\r\n      inclusiveEnd = combinedOpts.inclusive_end;\r\n    }\r\n\r\n    return {\r\n      queryOpts: {\r\n        startkey: startkey,\r\n        endkey: endkey,\r\n        inclusiveStart,\r\n        inclusiveEnd,\r\n      },\r\n      inMemoryFields: Object.keys(cloneSelector),\r\n      field: index.name,\r\n    };\r\n  }\r\n\r\n  return {\r\n    queryOpts: null,\r\n    inMemoryFields: Object.keys(cloneSelector),\r\n    field: null,\r\n  };\r\n}\r\n\r\n/**\r\n * @deprecated we can adopt it later for next storages\r\n * @param selector\r\n * @param indexes\r\n * @returns\r\n */\r\nfunction getMultiFieldQueryOpts<RxDocType>(\r\n  selector: MangoQuerySelector<RxDocType>,\r\n  indexes: Index[]\r\n) {\r\n  const fields = Object.keys(selector);\r\n\r\n  let inMemoryFields: string[] = [];\r\n  let startkey = [];\r\n  let endkey = [];\r\n  let inclusiveStart: boolean | undefined = undefined;\r\n  let inclusiveEnd: boolean | undefined = undefined;\r\n\r\n  function finish(i: number) {\r\n    if (inclusiveStart !== false) {\r\n      startkey.push(COLLATE_LO);\r\n    }\r\n    if (inclusiveEnd !== false) {\r\n      endkey.push(COLLATE_HI);\r\n    }\r\n    // keep track of the fields where we lost specificity,\r\n    // and therefore need to filter in-memory\r\n    inMemoryFields = fields.slice(i);\r\n  }\r\n\r\n  for (var i = 0, len = fields.length; i < len; i++) {\r\n    const indexField = fields[i];\r\n\r\n    var matcher = selector[indexField];\r\n\r\n    if (!matcher) {\r\n      // fewer fields in user query than in index\r\n      finish(i);\r\n      break;\r\n    } else if (i > 0) {\r\n      if (\r\n        (Object.keys(matcher) as LogicalOperator[]).some(isNonLogicalMatcher)\r\n      ) {\r\n        // non-logical are ignored\r\n        finish(i);\r\n        break;\r\n      }\r\n      var usingGtlt =\r\n        \"$gt\" in matcher ||\r\n        \"$gte\" in matcher ||\r\n        \"$lt\" in matcher ||\r\n        \"$lte\" in matcher;\r\n      var previousKeys = Object.keys(selector[fields[i - 1]]);\r\n      var previousWasEq = arrayEquals(previousKeys, [\"$eq\"]);\r\n      var previousWasSame = arrayEquals(previousKeys, Object.keys(matcher));\r\n      var gtltLostSpecificity = usingGtlt && !previousWasEq && !previousWasSame;\r\n      if (gtltLostSpecificity) {\r\n        finish(i);\r\n        break;\r\n      }\r\n    }\r\n\r\n    var userOperators = Object.keys(matcher);\r\n\r\n    let combinedOpts: Record<any, any> | null = null;\r\n\r\n    for (var j = 0; j < userOperators.length; j++) {\r\n      var userOperator = userOperators[j];\r\n      var userValue = matcher[userOperator];\r\n\r\n      var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\r\n\r\n      if (combinedOpts) {\r\n        combinedOpts = mergeObjects([combinedOpts, newOpts]);\r\n      } else {\r\n        combinedOpts = newOpts as any;\r\n      }\r\n    }\r\n\r\n    startkey.push(\r\n      \"startkey\" in combinedOpts! ? combinedOpts?.startkey : COLLATE_LO\r\n    );\r\n    endkey.push(\"endkey\" in combinedOpts! ? combinedOpts.endkey : COLLATE_HI);\r\n    if (\"inclusive_start\" in combinedOpts!) {\r\n      inclusiveStart = combinedOpts.inclusive_start;\r\n    }\r\n    if (\"inclusive_end\" in combinedOpts!) {\r\n      inclusiveEnd = combinedOpts.inclusive_end;\r\n    }\r\n  }\r\n\r\n  var res: any = {\r\n    startkey: startkey,\r\n    endkey: endkey,\r\n  };\r\n\r\n  if (typeof inclusiveStart !== \"undefined\") {\r\n    res.inclusive_start = inclusiveStart;\r\n  }\r\n  if (typeof inclusiveEnd !== \"undefined\") {\r\n    res.inclusive_end = inclusiveEnd;\r\n  }\r\n\r\n  return {\r\n    queryOpts: res,\r\n    inMemoryFields: inMemoryFields,\r\n    fields: fields,\r\n  };\r\n}\r\n\r\nfunction isNonLogicalMatcher(matcher: LogicalOperator) {\r\n  return logicalMatchers.indexOf(matcher) === -1;\r\n}\r\n\r\nfunction arrayEquals(arr1: any[], arr2: any[]) {\r\n  if (arr1.length !== arr2.length) {\r\n    return false;\r\n  }\r\n  for (var i = 0, len = arr1.length; i < len; i++) {\r\n    if (arr1[i] !== arr2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction mergeObjects(arr: any[]) {\r\n  var res = {};\r\n  for (var i = 0, len = arr.length; i < len; i++) {\r\n    res = extend(true, res, arr[i]);\r\n  }\r\n  return res;\r\n}\r\n"],"file":"translate-mango-query.js"}