{"version":3,"sources":["../../src/utils.ts"],"names":["getEventKey","isLocal","primary","revision","prefix","eventKey","isIndexValid","index","split","length","validateIndexValues","every","part"],"mappings":";;;;;;;AAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CACzBC,OADyB,EAEzBC,OAFyB,EAGzBC,QAHyB,EAItB;AACH,MAAMC,MAAM,GAAGH,OAAO,GAAG,OAAH,GAAa,WAAnC;AACA,MAAMI,QAAQ,GAAGD,MAAM,GAAG,GAAT,GAAeF,OAAf,GAAyB,GAAzB,GAA+BC,QAAhD;AACA,SAAOE,QAAP;AACD,CARM;AAUP;AACA;AACA;AACA;AACA;;;;;AACO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAmB;AAC7C,SAAOA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,MAAjB,KAA4B,CAAnC;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;;;;;AACO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCH,KADiC,EAE9B;AACH,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOD,YAAY,CAACC,KAAD,CAAnB;AACD;;AAED,SAAOA,KAAK,CAACI,KAAN,CAAY,UAACC,IAAD;AAAA,WAAUN,YAAY,CAACM,IAAD,CAAtB;AAAA,GAAZ,CAAP;AACD,CARM","sourcesContent":["export const getEventKey = (\r\n  isLocal: boolean,\r\n  primary: string,\r\n  revision: string\r\n) => {\r\n  const prefix = isLocal ? \"local\" : \"non-local\";\r\n  const eventKey = prefix + \"|\" + primary + \"|\" + revision;\r\n  return eventKey;\r\n};\r\n\r\n/**\r\n * let's assume for now that indexes like \"hey[].ho\" are invalid\r\n * @param {string} index\r\n * @returns {boolean}\r\n */\r\nexport const isIndexValid = (index: string) => {\r\n  return index.split(\".\").length === 1;\r\n};\r\n\r\n/**\r\n *\r\n * @param {string | string[]} index\r\n * @returns {boolean}\r\n */\r\nexport const validateIndexValues = (\r\n  index: string | readonly string[] | string[]\r\n) => {\r\n  if (typeof index === \"string\") {\r\n    return isIndexValid(index);\r\n  }\r\n\r\n  return index.every((part) => isIndexValid(part));\r\n};\r\n"],"file":"utils.js"}