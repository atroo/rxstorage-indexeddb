{"version":3,"sources":["../../src/pouch-key-range.ts"],"names":["extend","require","combinationFields","logicalMatchers","generatePouchKeyRange","query","indexes","selector","massageSelector","sort","massageSort","validateFindRequest","transformMangoIntoPouchKeyRange","cloneSelector","Object","assign","i","index","compound","Array","isArray","value","memoMatcher","name","keys","some","isNonLogicalMatcher","forEach","part","matcher","usingGtlt","previousKeys","previousWasEq","arrayEquals","previousWasSame","gtltLostSpecificity","userOperators","combinedOpts","j","length","userOperator","userValue","newOpts","getMultiFieldCoreQueryPlan","mergeObjects","startkey","COLLATE_LO","endkey","COLLATE_HI","inclusiveStart","inclusive_start","inclusiveEnd","inclusive_end","queryOpts","inMemoryFields","field","primary","input","result","wasAnded","mergeAndedSelectors","fields","$eq","$ne","selectors","res","isCombinationalField","map","m","fieldMatchers","operator","mergeGtGte","mergeLtLte","mergeNe","mergeEq","indexOf","Error","sorting","obj","requestDef","$gte","$gt","$lte","$lt","push","arr1","arr2","len","arr"],"mappings":"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","sourcesContent":["import { MangoQuery, MangoQuerySelector, MangoQuerySortPart } from \"rxdb\";\r\nimport { Index } from \"./types/browser-storeage-state\";\r\nimport { IPouchKeyRangeData } from \"./types/pouch-key-range\";\r\nimport { COLLATE_HI, COLLATE_LO } from \"./variables\";\r\nconst extend = require(\"pouchdb-extend\");\r\nconst combinationFields = [\"$or\", \"$nor\", \"$not\"];\r\nconst logicalMatchers = [\"$eq\", \"$gt\", \"$gte\", \"$lt\", \"$lte\"];\r\n\r\n// TODO: types\r\n\r\nexport const generatePouchKeyRange = <RxDocType>(\r\n  query: MangoQuery<RxDocType>,\r\n  indexes: Index[]\r\n): IPouchKeyRangeData => {\r\n  // TODO: don't mutate query\r\n  if (query.selector) {\r\n    query.selector = massageSelector(query.selector);\r\n  }\r\n  if (query.sort) {\r\n    query.sort = massageSort(query.sort);\r\n  }\r\n\r\n  validateFindRequest(query);\r\n\r\n  return transformMangoIntoPouchKeyRange(query.selector, indexes);\r\n\r\n  /**\r\n   * Based on \"getMultiFieldQueryOpts\" and \"getSingleFieldCoreQueryPlan\" pouch functions (pouch-find lib)\r\n   * @param selector\r\n   * @param indexes\r\n   * @returns\r\n   */\r\n  function transformMangoIntoPouchKeyRange<RxDocType>(\r\n    selector: MangoQuerySelector<RxDocType>,\r\n    indexes: Index[]\r\n  ) {\r\n    const cloneSelector = Object.assign({}, selector);\r\n    for (let i = 0; i < indexes.length; i += 1) {\r\n      const index = indexes[i];\r\n      const compound = Array.isArray(index.value);\r\n      let memoMatcher: any;\r\n      if (!compound) {\r\n        memoMatcher = cloneSelector[index.name];\r\n        if (Object.keys(memoMatcher).some(isNonLogicalMatcher)) {\r\n          continue;\r\n        }\r\n      } else {\r\n        (index.value as string[]).forEach((part) => {\r\n          const matcher = cloneSelector[part];\r\n          if (!matcher || Object.keys(matcher).some(isNonLogicalMatcher)) {\r\n            return;\r\n          }\r\n\r\n          if (!memoMatcher) {\r\n            memoMatcher = part;\r\n            delete cloneSelector[part];\r\n          } else {\r\n            var usingGtlt =\r\n              \"$gt\" in matcher ||\r\n              \"$gte\" in matcher ||\r\n              \"$lt\" in matcher ||\r\n              \"$lte\" in matcher;\r\n            var previousKeys = Object.keys(memoMatcher);\r\n            var previousWasEq = arrayEquals(previousKeys, [\"$eq\"]);\r\n            var previousWasSame = arrayEquals(\r\n              previousKeys,\r\n              Object.keys(matcher)\r\n            );\r\n            var gtltLostSpecificity =\r\n              usingGtlt && !previousWasEq && !previousWasSame;\r\n            if (!gtltLostSpecificity) {\r\n              delete cloneSelector[part];\r\n            }\r\n          }\r\n        });\r\n        if (!memoMatcher) {\r\n          continue;\r\n        }\r\n      }\r\n\r\n      delete cloneSelector[index.name];\r\n\r\n      var userOperators = Object.keys(memoMatcher);\r\n\r\n      let combinedOpts: Record<any, any> | null = null;\r\n\r\n      for (var j = 0; j < userOperators.length; j++) {\r\n        var userOperator = userOperators[j];\r\n        var userValue = memoMatcher[userOperator];\r\n\r\n        var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\r\n\r\n        if (combinedOpts) {\r\n          combinedOpts = mergeObjects([combinedOpts, newOpts]);\r\n        } else {\r\n          combinedOpts = newOpts as any;\r\n        }\r\n      }\r\n\r\n      const startkey =\r\n        \"startkey\" in combinedOpts! ? combinedOpts?.startkey : COLLATE_LO;\r\n      const endkey =\r\n        \"endkey\" in combinedOpts! ? combinedOpts.endkey : COLLATE_HI;\r\n\r\n      let inclusiveStart;\r\n      if (\"inclusive_start\" in combinedOpts!) {\r\n        inclusiveStart = combinedOpts.inclusive_start;\r\n      }\r\n      let inclusiveEnd;\r\n      if (\"inclusive_end\" in combinedOpts!) {\r\n        inclusiveEnd = combinedOpts.inclusive_end;\r\n      }\r\n\r\n      return {\r\n        queryOpts: {\r\n          startkey: startkey,\r\n          endkey: endkey,\r\n          inclusiveStart,\r\n          inclusiveEnd,\r\n        },\r\n        inMemoryFields: Object.keys(cloneSelector),\r\n        field: index.name,\r\n        primary: index.primary,\r\n      };\r\n    }\r\n\r\n    return {\r\n      queryOpts: null,\r\n      inMemoryFields: Object.keys(cloneSelector),\r\n      field: null,\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Snippets from pouchdb-find that allow to transform Mango query\r\n */\r\n\r\nfunction massageSelector<RxDocType>(input: MangoQuerySelector<RxDocType>) {\r\n  let result = { ...input };\r\n  let wasAnded = false;\r\n  if (\"$and\" in result) {\r\n    result = mergeAndedSelectors(result[\"$and\"]);\r\n    wasAnded = true;\r\n  }\r\n\r\n  if (\"$not\" in result) {\r\n    //This feels a little like forcing, but it will work for now,\r\n    //I would like to come back to this and make the merging of selectors a little more generic\r\n    result[\"$not\"] = mergeAndedSelectors([result[\"$not\"]]);\r\n  }\r\n\r\n  var fields = Object.keys(result);\r\n\r\n  for (var i = 0; i < fields.length; i++) {\r\n    var field = fields[i];\r\n    var matcher = result[field];\r\n\r\n    if (typeof matcher !== \"object\" || matcher === null) {\r\n      matcher = { $eq: matcher };\r\n    } else if (\"$ne\" in matcher && !wasAnded) {\r\n      // I put these in an array, since there may be more than one\r\n      // but in the \"mergeAnded\" operation, I already take care of that\r\n      matcher.$ne = [matcher.$ne];\r\n    }\r\n    result[field] = matcher;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction mergeAndedSelectors(selectors: any[]) {\r\n  // sort to ensure that e.g. if the user specified\r\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\r\n  // just {$gt: 'b'}\r\n  var res: Record<string, any> = {};\r\n\r\n  selectors.forEach(function (selector) {\r\n    Object.keys(selector).forEach(function (field) {\r\n      var matcher = selector[field];\r\n      if (typeof matcher !== \"object\") {\r\n        matcher = { $eq: matcher };\r\n      }\r\n\r\n      if (isCombinationalField(field)) {\r\n        if (matcher instanceof Array) {\r\n          res[field] = matcher.map(function (m) {\r\n            return mergeAndedSelectors([m]);\r\n          });\r\n        } else {\r\n          res[field] = mergeAndedSelectors([matcher]);\r\n        }\r\n      } else {\r\n        var fieldMatchers = (res[field] = res[field] || {});\r\n        Object.keys(matcher).forEach(function (operator) {\r\n          var value = matcher[operator];\r\n\r\n          if (operator === \"$gt\" || operator === \"$gte\") {\r\n            return mergeGtGte(operator, value, fieldMatchers);\r\n          } else if (operator === \"$lt\" || operator === \"$lte\") {\r\n            return mergeLtLte(operator, value, fieldMatchers);\r\n          } else if (operator === \"$ne\") {\r\n            return mergeNe(value, fieldMatchers);\r\n          } else if (operator === \"$eq\") {\r\n            return mergeEq(value, fieldMatchers);\r\n          }\r\n          fieldMatchers[operator] = value;\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nfunction isCombinationalField(field: string) {\r\n  return combinationFields.indexOf(field) > -1;\r\n}\r\n\r\n// normalize the \"sort\" value\r\nfunction massageSort<RxDocType>(sort: MangoQuerySortPart<RxDocType>[]) {\r\n  if (!Array.isArray(sort)) {\r\n    throw new Error(\"invalid sort json - should be an array\");\r\n  }\r\n  return sort.map(function (sorting) {\r\n    if (typeof sorting === \"string\") {\r\n      const obj = {\r\n        [sorting as string]: \"asc\",\r\n      } as MangoQuerySortPart<RxDocType>;\r\n      return obj;\r\n    } else {\r\n      return sorting;\r\n    }\r\n  });\r\n}\r\n\r\nfunction validateFindRequest<RxDocType>(requestDef: MangoQuery<RxDocType>) {\r\n  if (typeof requestDef.selector !== \"object\") {\r\n    throw new Error(\"you must provide a selector when you find()\");\r\n  }\r\n\r\n  /*var selectors = requestDef.selector['$and'] || [requestDef.selector];\r\n  for (var i = 0; i < selectors.length; i++) {\r\n    var selector = selectors[i];\r\n    var keys = Object.keys(selector);\r\n    if (keys.length === 0) {\r\n      throw new Error('invalid empty selector');\r\n    }\r\n    //var selection = selector[keys[0]];\r\n    /*if (Object.keys(selection).length !== 1) {\r\n      throw new Error('invalid selector: ' + JSON.stringify(selection) +\r\n        ' - it must have exactly one key/value');\r\n    }\r\n  }*/\r\n}\r\n\r\n// collapse logically equivalent gt/gte values\r\nfunction mergeGtGte(\r\n  operator: string,\r\n  value: string | number,\r\n  fieldMatchers: any\r\n) {\r\n  if (typeof fieldMatchers.$eq !== \"undefined\") {\r\n    return; // do nothing\r\n  }\r\n  if (typeof fieldMatchers.$gte !== \"undefined\") {\r\n    if (operator === \"$gte\") {\r\n      if (value > fieldMatchers.$gte) {\r\n        // more specificity\r\n        fieldMatchers.$gte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value >= fieldMatchers.$gte) {\r\n        // more specificity\r\n        delete fieldMatchers.$gte;\r\n        fieldMatchers.$gt = value;\r\n      }\r\n    }\r\n  } else if (typeof fieldMatchers.$gt !== \"undefined\") {\r\n    if (operator === \"$gte\") {\r\n      if (value > fieldMatchers.$gt) {\r\n        // more specificity\r\n        delete fieldMatchers.$gt;\r\n        fieldMatchers.$gte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value > fieldMatchers.$gt) {\r\n        // more specificity\r\n        fieldMatchers.$gt = value;\r\n      }\r\n    }\r\n  } else {\r\n    fieldMatchers[operator] = value;\r\n  }\r\n}\r\n\r\n// collapse logically equivalent lt/lte values\r\nfunction mergeLtLte(\r\n  operator: string,\r\n  value: string | number,\r\n  fieldMatchers: any\r\n) {\r\n  if (typeof fieldMatchers.$eq !== \"undefined\") {\r\n    return; // do nothing\r\n  }\r\n  if (typeof fieldMatchers.$lte !== \"undefined\") {\r\n    if (operator === \"$lte\") {\r\n      if (value < fieldMatchers.$lte) {\r\n        // more specificity\r\n        fieldMatchers.$lte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value <= fieldMatchers.$lte) {\r\n        // more specificity\r\n        delete fieldMatchers.$lte;\r\n        fieldMatchers.$lt = value;\r\n      }\r\n    }\r\n  } else if (typeof fieldMatchers.$lt !== \"undefined\") {\r\n    if (operator === \"$lte\") {\r\n      if (value < fieldMatchers.$lt) {\r\n        // more specificity\r\n        delete fieldMatchers.$lt;\r\n        fieldMatchers.$lte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value < fieldMatchers.$lt) {\r\n        // more specificity\r\n        fieldMatchers.$lt = value;\r\n      }\r\n    }\r\n  } else {\r\n    fieldMatchers[operator] = value;\r\n  }\r\n}\r\n\r\n// combine $ne values into one array\r\nfunction mergeNe(value: string | number, fieldMatchers: any) {\r\n  if (\"$ne\" in fieldMatchers) {\r\n    // there are many things this could \"not\" be\r\n    fieldMatchers.$ne.push(value);\r\n  } else {\r\n    // doesn't exist yet\r\n    fieldMatchers.$ne = [value];\r\n  }\r\n}\r\n\r\n// add $eq into the mix\r\nfunction mergeEq(value: string | number, fieldMatchers: any) {\r\n  // these all have less specificity than the $eq\r\n  // TODO: check for user errors here\r\n  delete fieldMatchers.$gt;\r\n  delete fieldMatchers.$gte;\r\n  delete fieldMatchers.$lt;\r\n  delete fieldMatchers.$lte;\r\n  delete fieldMatchers.$ne;\r\n  fieldMatchers.$eq = value;\r\n}\r\n\r\nfunction getMultiFieldCoreQueryPlan(userOperator: string, userValue: any) {\r\n  switch (userOperator) {\r\n    case \"$eq\":\r\n      return {\r\n        startkey: userValue,\r\n        endkey: userValue,\r\n      };\r\n    case \"$lte\":\r\n      return {\r\n        endkey: userValue,\r\n      };\r\n    case \"$gte\":\r\n      return {\r\n        startkey: userValue,\r\n      };\r\n    case \"$lt\":\r\n      return {\r\n        endkey: userValue,\r\n        inclusive_end: false,\r\n      };\r\n    case \"$gt\":\r\n      return {\r\n        startkey: userValue,\r\n        inclusive_start: false,\r\n      };\r\n  }\r\n}\r\n\r\nfunction isNonLogicalMatcher(matcher: string) {\r\n  return logicalMatchers.indexOf(matcher) === -1;\r\n}\r\n\r\nfunction arrayEquals(arr1: any[], arr2: any[]) {\r\n  if (arr1.length !== arr2.length) {\r\n    return false;\r\n  }\r\n  for (var i = 0, len = arr1.length; i < len; i++) {\r\n    if (arr1[i] !== arr2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction mergeObjects(arr: any[]) {\r\n  var res = {};\r\n  for (var i = 0, len = arr.length; i < len; i++) {\r\n    res = extend(true, res, arr[i]);\r\n  }\r\n  return res;\r\n}\r\n"],"file":"pouch-key-range.js"}