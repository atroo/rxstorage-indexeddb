{"version":3,"sources":["../../src/pouch-key-range.ts"],"names":["extend","require","combinationFields","logicalMatchers","generatePouchKeyRange","query","indexes","selector","massageSelector","sort","massageSort","validateFindRequest","transformMangoIntoPouchKeyRange","queryOpts","startkey","endkey","Object","assign","i","length","index","compound","Array","isArray","value","keyRangeOptsData","keyRangeOptsFromCompoundIndex","keyRangeOptsFromIndex","inMemoryFields","keys","field","name","notIndexed","primary","fields","f","console","log","cloneSelector","matcher","some","isNonLogicalMatcher","generateQueryOpts","foundValidMatcher","part","partMatcher","userOperators","combinedOpts","j","userOperator","userValue","newOpts","getMultiFieldCoreQueryPlan","mergeObjects","COLLATE_LO","COLLATE_HI","inclusiveStart","inclusive_start","inclusiveEnd","inclusive_end","undefined","input","result","wasAnded","mergeAndedSelectors","$eq","$ne","selectors","res","forEach","isCombinationalField","map","m","fieldMatchers","operator","mergeGtGte","mergeLtLte","mergeNe","mergeEq","indexOf","Error","sorting","obj","requestDef","$gte","$gt","$lte","$lt","push","arrayEquals","arr1","arr2","len","arr"],"mappings":"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","sourcesContent":["import { MangoQuery, MangoQuerySelector, MangoQuerySortPart } from \"rxdb\";\r\nimport { Index } from \"./types/browser-storeage-state\";\r\nimport { IPouchKeyRangeData, IQueryOpts } from \"./types/pouch-key-range\";\r\nimport { isIndexValid } from \"./utils\";\r\nimport { COLLATE_HI, COLLATE_LO } from \"./variables\";\r\nconst extend = require(\"pouchdb-extend\");\r\nconst combinationFields = [\"$or\", \"$nor\", \"$not\"];\r\nconst logicalMatchers = [\"$eq\", \"$gt\", \"$gte\", \"$lt\", \"$lte\"];\r\n\r\n// TODO: types\r\n\r\nexport const generatePouchKeyRange = <RxDocType>(\r\n  query: MangoQuery<RxDocType>,\r\n  indexes: Index[]\r\n): IPouchKeyRangeData => {\r\n  // TODO: don't mutate query\r\n  if (query.selector) {\r\n    query.selector = massageSelector(query.selector);\r\n  }\r\n  if (query.sort) {\r\n    query.sort = massageSort(query.sort);\r\n  }\r\n\r\n  validateFindRequest(query);\r\n\r\n  return transformMangoIntoPouchKeyRange(query.selector, indexes);\r\n\r\n  /**\r\n   * Based on \"getMultiFieldQueryOpts\" and \"getSingleFieldCoreQueryPlan\" pouch functions (pouch-find lib)\r\n   * @param selector\r\n   * @param indexes\r\n   * @returns\r\n   */\r\n  function transformMangoIntoPouchKeyRange<RxDocType>(\r\n    selector: MangoQuerySelector<RxDocType>,\r\n    indexes: Index[]\r\n  ) {\r\n    let queryOpts: IQueryOpts = {\r\n      startkey: [],\r\n      endkey: [],\r\n    };\r\n    selector = Object.assign({}, selector);\r\n\r\n    for (let i = 0; i < indexes.length; i += 1) {\r\n      const index = indexes[i];\r\n      const compound = Array.isArray(index.value);\r\n      let keyRangeOptsData: ReturnType<\r\n        typeof keyRangeOptsFromIndex | typeof keyRangeOptsFromCompoundIndex\r\n      >;\r\n      if (compound) {\r\n        keyRangeOptsData = keyRangeOptsFromCompoundIndex(selector, index);\r\n      } else {\r\n        keyRangeOptsData = keyRangeOptsFromIndex(selector, index);\r\n      }\r\n\r\n      if (!keyRangeOptsData) {\r\n        continue;\r\n      }\r\n\r\n      selector = keyRangeOptsData.selector;\r\n      queryOpts = keyRangeOptsData.queryOpts;\r\n\r\n      return {\r\n        queryOpts,\r\n        inMemoryFields: Object.keys(selector),\r\n        field: index.name,\r\n        notIndexed: index.primary,\r\n      };\r\n    }\r\n\r\n    // index field is was not found. use first valid field.\r\n    const fields = Object.keys(selector);\r\n    for (let i = 0; i < fields.length; i += 1) {\r\n      const f = fields[i];\r\n      if (!isIndexValid(f)) {\r\n        // composite keys are invalid. skip\r\n        continue;\r\n      }\r\n\r\n      const keyRangeOptsData = keyRangeOptsFromIndex(selector, {\r\n        name: f,\r\n        value: f,\r\n      });\r\n\r\n      if (!keyRangeOptsData) {\r\n        continue;\r\n      }\r\n\r\n      console.log(\"KEY RANGE OPTS:\", keyRangeOptsData);\r\n      delete keyRangeOptsData.selector[f];\r\n      return {\r\n        queryOpts: keyRangeOptsData.queryOpts,\r\n        inMemoryFields: Object.keys(keyRangeOptsData.selector),\r\n        field: f,\r\n        notIndexed: true,\r\n      };\r\n    }\r\n\r\n    return {\r\n      queryOpts: null,\r\n      inMemoryFields: Object.keys(selector),\r\n      field: null,\r\n    };\r\n  }\r\n};\r\n\r\nfunction keyRangeOptsFromIndex<RxDocType>(\r\n  selector: MangoQuerySelector<RxDocType>,\r\n  index: Index\r\n) {\r\n  const cloneSelector = Object.assign({}, selector);\r\n  let queryOpts: IQueryOpts = {\r\n    startkey: [],\r\n    endkey: [],\r\n  };\r\n\r\n  const matcher = cloneSelector[index.name];\r\n  if (!matcher) {\r\n    return null;\r\n  }\r\n\r\n  if (Object.keys(matcher).some(isNonLogicalMatcher)) {\r\n    return null;\r\n  }\r\n\r\n  delete cloneSelector[index.name];\r\n  queryOpts = generateQueryOpts(matcher, queryOpts);\r\n\r\n  return {\r\n    queryOpts,\r\n    selector: cloneSelector,\r\n  };\r\n}\r\n\r\nfunction keyRangeOptsFromCompoundIndex<RxDocType>(\r\n  selector: MangoQuerySelector<RxDocType>,\r\n  index: Index\r\n) {\r\n  const cloneSelector = Object.assign({}, selector);\r\n  let queryOpts: IQueryOpts = {\r\n    startkey: [],\r\n    endkey: [],\r\n  };\r\n\r\n  let matcher: Record<string, any> | null = null;\r\n  let foundValidMatcher = false;\r\n\r\n  for (const part of index.value) {\r\n    const partMatcher: Record<string, any> | null = selector[part];\r\n    if (!partMatcher || Object.keys(partMatcher).some(isNonLogicalMatcher)) {\r\n      // wasn't able generate valid key range. go to next index.\r\n      foundValidMatcher = false;\r\n      break;\r\n    }\r\n\r\n    matcher = partMatcher;\r\n    delete cloneSelector[part];\r\n    queryOpts = generateQueryOpts(partMatcher, queryOpts);\r\n\r\n    foundValidMatcher = true;\r\n  }\r\n\r\n  if (!matcher || !foundValidMatcher) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    selector: cloneSelector,\r\n    queryOpts: { ...queryOpts, compound: true },\r\n  };\r\n}\r\n\r\nfunction generateQueryOpts(\r\n  matcher: Record<string, any>,\r\n  queryOpts: IQueryOpts\r\n): IQueryOpts {\r\n  const userOperators = Object.keys(matcher);\r\n\r\n  let combinedOpts: Record<any, any> | null = null;\r\n\r\n  for (var j = 0; j < userOperators.length; j++) {\r\n    var userOperator = userOperators[j];\r\n    var userValue = matcher[userOperator];\r\n\r\n    var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\r\n\r\n    if (combinedOpts) {\r\n      combinedOpts = mergeObjects([combinedOpts, newOpts]) as IQueryOpts;\r\n    } else {\r\n      combinedOpts = newOpts as IQueryOpts;\r\n    }\r\n  }\r\n\r\n  const startkey =\r\n    combinedOpts && \"startkey\" in combinedOpts\r\n      ? combinedOpts.startkey\r\n      : COLLATE_LO;\r\n  const endkey =\r\n    combinedOpts && \"endkey\" in combinedOpts ? combinedOpts.endkey : COLLATE_HI;\r\n\r\n  let inclusiveStart;\r\n  if (combinedOpts && \"inclusive_start\" in combinedOpts!) {\r\n    inclusiveStart = combinedOpts.inclusive_start;\r\n  }\r\n  let inclusiveEnd;\r\n  if (combinedOpts && \"inclusive_end\" in combinedOpts) {\r\n    inclusiveEnd = combinedOpts.inclusive_end;\r\n  }\r\n\r\n  return {\r\n    startkey: [...queryOpts.startkey, startkey],\r\n    endkey: [...queryOpts.endkey, endkey],\r\n    inclusiveStart:\r\n      inclusiveStart !== undefined ? inclusiveStart : queryOpts.inclusiveStart,\r\n    inclusiveEnd:\r\n      inclusiveEnd !== undefined ? inclusiveEnd : queryOpts.inclusiveEnd,\r\n  };\r\n}\r\n\r\n/**\r\n * Snippets from pouchdb-find that allow to transform Mango query\r\n */\r\n\r\nfunction massageSelector<RxDocType>(input: MangoQuerySelector<RxDocType>) {\r\n  let result = { ...input };\r\n  let wasAnded = false;\r\n  if (\"$and\" in result) {\r\n    result = mergeAndedSelectors(result[\"$and\"]);\r\n    wasAnded = true;\r\n  }\r\n\r\n  if (\"$not\" in result) {\r\n    //This feels a little like forcing, but it will work for now,\r\n    //I would like to come back to this and make the merging of selectors a little more generic\r\n    result[\"$not\"] = mergeAndedSelectors([result[\"$not\"]]);\r\n  }\r\n\r\n  var fields = Object.keys(result);\r\n\r\n  for (var i = 0; i < fields.length; i++) {\r\n    var field = fields[i];\r\n    var matcher = result[field];\r\n\r\n    if (typeof matcher !== \"object\" || matcher === null) {\r\n      matcher = { $eq: matcher };\r\n    } else if (\"$ne\" in matcher && !wasAnded) {\r\n      // I put these in an array, since there may be more than one\r\n      // but in the \"mergeAnded\" operation, I already take care of that\r\n      matcher.$ne = [matcher.$ne];\r\n    }\r\n    result[field] = matcher;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction mergeAndedSelectors(selectors: any[]) {\r\n  // sort to ensure that e.g. if the user specified\r\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\r\n  // just {$gt: 'b'}\r\n  var res: Record<string, any> = {};\r\n\r\n  selectors.forEach(function (selector) {\r\n    Object.keys(selector).forEach(function (field) {\r\n      var matcher = selector[field];\r\n      if (typeof matcher !== \"object\") {\r\n        matcher = { $eq: matcher };\r\n      }\r\n\r\n      if (isCombinationalField(field)) {\r\n        if (matcher instanceof Array) {\r\n          res[field] = matcher.map(function (m) {\r\n            return mergeAndedSelectors([m]);\r\n          });\r\n        } else {\r\n          res[field] = mergeAndedSelectors([matcher]);\r\n        }\r\n      } else {\r\n        var fieldMatchers = (res[field] = res[field] || {});\r\n        Object.keys(matcher).forEach(function (operator) {\r\n          var value = matcher[operator];\r\n\r\n          if (operator === \"$gt\" || operator === \"$gte\") {\r\n            return mergeGtGte(operator, value, fieldMatchers);\r\n          } else if (operator === \"$lt\" || operator === \"$lte\") {\r\n            return mergeLtLte(operator, value, fieldMatchers);\r\n          } else if (operator === \"$ne\") {\r\n            return mergeNe(value, fieldMatchers);\r\n          } else if (operator === \"$eq\") {\r\n            return mergeEq(value, fieldMatchers);\r\n          }\r\n          fieldMatchers[operator] = value;\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  return res;\r\n}\r\n\r\nfunction isCombinationalField(field: string) {\r\n  return combinationFields.indexOf(field) > -1;\r\n}\r\n\r\n// normalize the \"sort\" value\r\nfunction massageSort<RxDocType>(sort: MangoQuerySortPart<RxDocType>[]) {\r\n  if (!Array.isArray(sort)) {\r\n    throw new Error(\"invalid sort json - should be an array\");\r\n  }\r\n  return sort.map(function (sorting) {\r\n    if (typeof sorting === \"string\") {\r\n      const obj = {\r\n        [sorting as string]: \"asc\",\r\n      } as MangoQuerySortPart<RxDocType>;\r\n      return obj;\r\n    } else {\r\n      return sorting;\r\n    }\r\n  });\r\n}\r\n\r\nfunction validateFindRequest<RxDocType>(requestDef: MangoQuery<RxDocType>) {\r\n  if (typeof requestDef.selector !== \"object\") {\r\n    throw new Error(\"you must provide a selector when you find()\");\r\n  }\r\n\r\n  /*var selectors = requestDef.selector['$and'] || [requestDef.selector];\r\n  for (var i = 0; i < selectors.length; i++) {\r\n    var selector = selectors[i];\r\n    var keys = Object.keys(selector);\r\n    if (keys.length === 0) {\r\n      throw new Error('invalid empty selector');\r\n    }\r\n    //var selection = selector[keys[0]];\r\n    /*if (Object.keys(selection).length !== 1) {\r\n      throw new Error('invalid selector: ' + JSON.stringify(selection) +\r\n        ' - it must have exactly one key/value');\r\n    }\r\n  }*/\r\n}\r\n\r\n// collapse logically equivalent gt/gte values\r\nfunction mergeGtGte(\r\n  operator: string,\r\n  value: string | number,\r\n  fieldMatchers: any\r\n) {\r\n  if (typeof fieldMatchers.$eq !== \"undefined\") {\r\n    return; // do nothing\r\n  }\r\n  if (typeof fieldMatchers.$gte !== \"undefined\") {\r\n    if (operator === \"$gte\") {\r\n      if (value > fieldMatchers.$gte) {\r\n        // more specificity\r\n        fieldMatchers.$gte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value >= fieldMatchers.$gte) {\r\n        // more specificity\r\n        delete fieldMatchers.$gte;\r\n        fieldMatchers.$gt = value;\r\n      }\r\n    }\r\n  } else if (typeof fieldMatchers.$gt !== \"undefined\") {\r\n    if (operator === \"$gte\") {\r\n      if (value > fieldMatchers.$gt) {\r\n        // more specificity\r\n        delete fieldMatchers.$gt;\r\n        fieldMatchers.$gte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value > fieldMatchers.$gt) {\r\n        // more specificity\r\n        fieldMatchers.$gt = value;\r\n      }\r\n    }\r\n  } else {\r\n    fieldMatchers[operator] = value;\r\n  }\r\n}\r\n\r\n// collapse logically equivalent lt/lte values\r\nfunction mergeLtLte(\r\n  operator: string,\r\n  value: string | number,\r\n  fieldMatchers: any\r\n) {\r\n  if (typeof fieldMatchers.$eq !== \"undefined\") {\r\n    return; // do nothing\r\n  }\r\n  if (typeof fieldMatchers.$lte !== \"undefined\") {\r\n    if (operator === \"$lte\") {\r\n      if (value < fieldMatchers.$lte) {\r\n        // more specificity\r\n        fieldMatchers.$lte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value <= fieldMatchers.$lte) {\r\n        // more specificity\r\n        delete fieldMatchers.$lte;\r\n        fieldMatchers.$lt = value;\r\n      }\r\n    }\r\n  } else if (typeof fieldMatchers.$lt !== \"undefined\") {\r\n    if (operator === \"$lte\") {\r\n      if (value < fieldMatchers.$lt) {\r\n        // more specificity\r\n        delete fieldMatchers.$lt;\r\n        fieldMatchers.$lte = value;\r\n      }\r\n    } else {\r\n      // operator === '$gt'\r\n      if (value < fieldMatchers.$lt) {\r\n        // more specificity\r\n        fieldMatchers.$lt = value;\r\n      }\r\n    }\r\n  } else {\r\n    fieldMatchers[operator] = value;\r\n  }\r\n}\r\n\r\n// combine $ne values into one array\r\nfunction mergeNe(value: string | number, fieldMatchers: any) {\r\n  if (\"$ne\" in fieldMatchers) {\r\n    // there are many things this could \"not\" be\r\n    fieldMatchers.$ne.push(value);\r\n  } else {\r\n    // doesn't exist yet\r\n    fieldMatchers.$ne = [value];\r\n  }\r\n}\r\n\r\n// add $eq into the mix\r\nfunction mergeEq(value: string | number, fieldMatchers: any) {\r\n  // these all have less specificity than the $eq\r\n  // TODO: check for user errors here\r\n  delete fieldMatchers.$gt;\r\n  delete fieldMatchers.$gte;\r\n  delete fieldMatchers.$lt;\r\n  delete fieldMatchers.$lte;\r\n  delete fieldMatchers.$ne;\r\n  fieldMatchers.$eq = value;\r\n}\r\n\r\nfunction getMultiFieldCoreQueryPlan(userOperator: string, userValue: any) {\r\n  switch (userOperator) {\r\n    case \"$eq\":\r\n      return {\r\n        startkey: userValue,\r\n        endkey: userValue,\r\n      };\r\n    case \"$lte\":\r\n      return {\r\n        endkey: userValue,\r\n      };\r\n    case \"$gte\":\r\n      return {\r\n        startkey: userValue,\r\n      };\r\n    case \"$lt\":\r\n      return {\r\n        endkey: userValue,\r\n        inclusive_end: false,\r\n      };\r\n    case \"$gt\":\r\n      return {\r\n        startkey: userValue,\r\n        inclusive_start: false,\r\n      };\r\n  }\r\n}\r\n\r\nfunction isNonLogicalMatcher(matcher: string) {\r\n  return logicalMatchers.indexOf(matcher) === -1;\r\n}\r\n\r\nfunction arrayEquals(arr1: any[], arr2: any[]) {\r\n  if (arr1.length !== arr2.length) {\r\n    return false;\r\n  }\r\n  for (var i = 0, len = arr1.length; i < len; i++) {\r\n    if (arr1[i] !== arr2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction mergeObjects(arr: any[]) {\r\n  var res = {};\r\n  for (var i = 0, len = arr.length; i < len; i++) {\r\n    res = extend(true, res, arr[i]);\r\n  }\r\n  return res;\r\n}\r\n"],"file":"pouch-key-range.js"}