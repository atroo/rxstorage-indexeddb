{"version":3,"sources":["../../src/rx-browser-storage.ts"],"names":["require","filterInMemoryFields","RxBrowserStorageStatics","hashKey","hash","data","Promise","resolve","prepareQuery","schema","mutateableQuery","getSortComparator","query","sortOptions","sort","primaryKey","fun","a","b","compareResult","forEach","sortPart","fieldName","Object","keys","direction","values","directionMultiplier","valueA","valueB","args","getQueryMatcher","doc","_attachments","_deleted","_rev","json","inMemoryFields","length","RxBrowserStorage","databaseSettings","name","statics","createStorageInstance","params","createKeyObjectStorageInstance","collectionName","getRxIdbStorage","storage"],"mappings":"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","sourcesContent":["import { DeterministicSortComparator, QueryMatcher } from \"event-reduce-js\";\r\nimport {\r\n  hash,\r\n  MangoQuery,\r\n  MangoQuerySortDirection,\r\n  MangoQuerySortPart,\r\n  RxJsonSchema,\r\n  RxStorage,\r\n  RxStorageStatics,\r\n} from \"rxdb\";\r\nimport {\r\n  RxDocumentWriteData,\r\n  RxKeyObjectStorageInstanceCreationParams,\r\n  RxStorageInstanceCreationParams,\r\n} from \"rxdb/dist/types/types/rx-storage\";\r\nimport { getPrimaryFieldOfPrimaryKey, newRxError } from \"./db-helpers\";\r\nimport { createBrowserKeyObjectStorageInstance } from \"./rx-browser-key-object-storage-instance\";\r\nimport { createBrowserStorageInstance } from \"./rx-browser-storage-instance\";\r\nconst { filterInMemoryFields } = require(\"pouchdb-selector-core\");\r\nimport {\r\n  BrowserStorageInternals,\r\n  BrowserStorageSettings,\r\n  IdbSettings,\r\n} from \"./types/browser-storage\";\r\n\r\nconst RxBrowserStorageStatics: RxStorageStatics = {\r\n  hashKey: \"md5\",\r\n  hash(data: Buffer | Blob | string): Promise<string> {\r\n    return Promise.resolve(hash(data));\r\n  },\r\n\r\n  prepareQuery<RxDocType>(\r\n    schema: RxJsonSchema<RxDocType>,\r\n    mutateableQuery: MangoQuery<RxDocType>\r\n  ) {\r\n    return mutateableQuery;\r\n  },\r\n\r\n  getSortComparator<RxDocType>(\r\n    schema: RxJsonSchema<RxDocType>,\r\n    query: MangoQuery<RxDocType>\r\n  ) {\r\n    // TODO if no sort is given, use sort by primary.\r\n    // This should be done inside of RxDB and not in the storage implementations.\r\n    const sortOptions: MangoQuerySortPart<RxDocType>[] = query.sort\r\n      ? (query.sort as any)\r\n      : [\r\n          {\r\n            [getPrimaryFieldOfPrimaryKey(schema.primaryKey)]: \"asc\",\r\n          },\r\n        ];\r\n\r\n    const fun: DeterministicSortComparator<RxDocType> = (\r\n      a: RxDocType,\r\n      b: RxDocType\r\n    ) => {\r\n      let compareResult: number = 0;\r\n      sortOptions.forEach((sortPart) => {\r\n        const fieldName: string = Object.keys(sortPart)[0];\r\n        const direction: MangoQuerySortDirection = Object.values(sortPart)[0];\r\n        const directionMultiplier = direction === \"asc\" ? 1 : -1;\r\n        const valueA: any = (a as any)[fieldName];\r\n        const valueB: any = (b as any)[fieldName];\r\n        if (valueA === valueB) {\r\n          return;\r\n        } else {\r\n          if (valueA > valueB) {\r\n            compareResult = 1 * directionMultiplier;\r\n          } else {\r\n            compareResult = -1 * directionMultiplier;\r\n          }\r\n        }\r\n      });\r\n\r\n      /**\r\n       * Two different objects should never have the same sort position.\r\n       * We ensure this by having the unique primaryKey in the sort params\r\n       * at this.prepareQuery()\r\n       */\r\n      if (!compareResult) {\r\n        throw newRxError(\"SNH\", { args: { query, a, b } });\r\n      }\r\n\r\n      return compareResult as 1 | -1;\r\n    };\r\n\r\n    return fun;\r\n  },\r\n\r\n  getQueryMatcher<RxDocType>(\r\n    schema: RxJsonSchema<RxDocType>,\r\n    query: MangoQuery<RxDocType>\r\n  ) {\r\n    const fun: QueryMatcher<RxDocumentWriteData<RxDocType>> = (\r\n      doc: RxDocumentWriteData<RxDocType>\r\n    ) => {\r\n      const { _attachments, _deleted, _rev, ...json } = doc;\r\n      const inMemoryFields = Object.keys(json);\r\n      return filterInMemoryFields([json], query, inMemoryFields).length > 0;\r\n    };\r\n\r\n    return fun;\r\n  },\r\n};\r\n\r\nexport class RxBrowserStorage\r\n  implements RxStorage<BrowserStorageInternals, IdbSettings>\r\n{\r\n  public name = \"atroo-browser-storage\";\r\n  public statics = RxBrowserStorageStatics;\r\n\r\n  constructor(public databaseSettings: IdbSettings) {}\r\n\r\n  async createStorageInstance<RxDocType>(\r\n    params: RxStorageInstanceCreationParams<RxDocType, BrowserStorageSettings>\r\n  ) {\r\n    return createBrowserStorageInstance(params, this.databaseSettings);\r\n  }\r\n\r\n  public async createKeyObjectStorageInstance(\r\n    params: RxKeyObjectStorageInstanceCreationParams<BrowserStorageSettings>\r\n  ) {\r\n    params.collectionName = params.collectionName + \"-key-object\";\r\n    return createBrowserKeyObjectStorageInstance(params, this.databaseSettings);\r\n  }\r\n}\r\n\r\nexport function getRxIdbStorage(databaseSettings: IdbSettings = {}) {\r\n  const storage = new RxBrowserStorage(databaseSettings);\r\n  return storage;\r\n}\r\n"],"file":"rx-browser-storage.js"}